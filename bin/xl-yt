#!/usr/bin/env bash

. "$HOME/.local/lib/xlotus/xlfns"

CONFIG="$XLOTUS_CFG"
CACHE="$XLOTUS_CACHE/xl-yt"
TMP="$XLOTUS_CACHE/xl-yt/tmp"
IMG="$XLOTUS_CACHE/xl-yt/img"
HELP="$XLOTUS_HELP"

printHelp () {
    cat "$HELP/xl-yt"
    cat "$HELP/footer"
}

ynotify () { 
    case $1 in
        # update
        u) notifier normal "arch-uptodate-symbolic" "Xl-yt" "Feed updated successfully";;
        # add
        a) notifier normal "application-rss+xml" "Xl-yt" "Feed added successfully" "<b>$2</b>" ;;
        # No subs
        ns)
            notifier warn "Xl-yt" \
                "Seems like you didn't subscribe to any feed" \
                "<b>Please subscribe to at least 1 channel and try again later</b>"
            ;;
        # error
        err) notifier err "Xl-yt" "$2" "$3" ;;
        # default
        *) notifier normal "application-rss+xml" "Xl-yt" "$2" "$3";;
    esac
}

chkmk "$CONFIG"
chkmk "$CACHE"
chkmk "$TMP"
chkmk "$IMG"

[ ! -f "$CONFIG"/ytsubs ] && touch "$CONFIG"/ytsubs

updater () {
        checkNetwork "Xl-yt"
        [ -n "$(ls -A "$TMP" 2>/dev/null)" ] && rm "$TMP"/*

        if [ -n "$(cat "$CONFIG"/ytsubs)" ]; then

            awk -F ';;;' '{print $2}' "$CONFIG"/ytsubs |\
            sed 's/=/={/g; s/$/}/g' |\
            xargs -P 0 -I {} curl -X 'GET' -s {} --output "$TMP"/'#1'

            awk '/<entry>/,/<\/entry>/' "$TMP"/* |\
            grep --no-group-separator --color=never -A 10 href |\
            sed '/author>/d; /<uri>/d; /<media:group>/d; /<media:content url=/d; /<updated>/d; s/.*href="//g; s/.*<media:thumbnail url="//g; s/".*$//g; s/.*<published>//g; s/<\/published>.*$//g; s/^.*<media:title>//g; s/<\/media:title>.*$//g; s/&quot;/"/g; s/^.*<name>//g; s/<\/name>.*$//g; s/&amp;/\&/g' |\
            perl -pe 's/\n/;;;/g if $. % 5' |\
            awk -F ';;;' '{t=$1; $1=$3; $3=t; print $1";;;"$2";;;"$3";;;"$4";;;"$5;}' > "$CACHE"/ytrss

            awk -F ';;;' '{print $5}' "$CACHE"/ytrss |\
            awk -F '/' '{if(system("[ ! -f '"$IMG"'/"$5" ]") == 0) {print $0}}' |\
            sed 's|vi/|vi/{|g; s|/hqdefault|}/hqdefault|g' |\
            xargs -P 0 -I {} curl -X 'GET' -s {} --output "$IMG"/'#1'

            ynotify u
        else
            ynotify ns
        fi
}

case $1 in
    -v|--view)
        if ! [ -f "$CACHE"/ytrss ]; then
            echo "Updating feed..."
            updater
        fi

        choice=$(sort -r < "$CACHE"/ytrss |\
            awk -F ';;;' '{ printf "%s %s\n", $3, $4}' |\
            fzfcmd "Video" \
                   --delimiter=" " \
                   --with-nth=2.. \
                   --preview-window=right:50% \
                   --bind="focus:transform-header($XLOTUS_BIN/xl-yt fzfheader {1}),alt-s:execute-silent($XLOTUS_BIN/xl-yt handle_link browser {1}),alt-c:execute-silent($XLOTUS_BIN/xl-yt handle_link copy {1})" \
                   --preview="$XLOTUS_LIB/xlpreview yt {1}" |\
                   awk '{printf $1}')

        choiceUrl=$(grep -F ";;;$choice" "$CACHE"/ytrss | awk -F ';;;' '{print $3}')

        if [ -n "$choice" ]; then
            nohup bash -c "source $XLOTUS_LIB/xlfns; mpvcmd $choiceUrl &" 2&>/dev/null
        fi
        ;;

    -u|--update) updater ;;

    -a|--add)
        shift
        checkNetwork
        if [ "$1" == "clip" ]; then
            [ -n "$WAYLAND_DISPLAY" ] && ytUrl="$(wl-paste)" || ytUrl="$(xclip -out -selection c)"
        else
            ytUrl="$1"
        fi

        if [ -n "$ytUrl" ]; then
            if [[ $ytUrl =~ ^"https://www.youtube.com/"[c@] ]]; then
                rssInfo=$(curl -s "$ytUrl" | grep '{"title":' | sed 's/.*{"channelMetadataRenderer"://g; s/{"title"://g; s/","description":.*,"rssUrl":"/;;;/g; s/",".*//g; s/^.*"//g; s/channel_id=UC/playlist_id=UU/g')
                
                "$XLOTUS_BIN"/xl-yt ytrssCheckUrl add "$rssInfo" "$ytUrl"
            else
                ynotify err "Not a youtube url" "<b>Please copy the url of a youtube channel to your clipboard</b>"
            fi
        fi
        ;;

    -c|--change)
        $EDITOR "$CONFIG"/ytsubs
        ;;

    -i|--import)
        jq ".subscriptions[] | .url, .name" "$2" |\
        sed 's|^"http.*channel/UC|https://www.youtube.com/feeds/videos.xml?playlist_id=UU|g; s/^"//g ;s/"$//g' |\
        perl -pe 's/\n/;;;/g if $. % 2' |\
        awk -F ';;;' '{t=$1; $1=$2; $2=t; print $1";;;"$2}' |\
        xargs -n1 -I {} bash -c "$XLOTUS_BIN/xl-yt ytrssCheckUrl import '{}'" 2&>/dev/null

        ctxt g "Imported successfully"
        ;;

    -e|--export)
        if [ -n "$2" ]; then
            awk -F ';;;' '{t=$1; $1=$2; $2=t; print $1";;;"$2}' "$CONFIG"/ytsubs |\
            sed 's/^/{\n"service_id": 0,\n"url": "/g; s/;;;/",\n"name": "/g; s/$/"\n}/g; s|feeds/videos.xml?playlist_id=UU|channel/UC|g' |\
            jq -s '{"app_version": "0.27.0", "app_version_int": 997, "subscriptions": .}' > "$2".json
        else
            ctxt r "Please name the exported file"
        fi
        ;;

    -h|--help) printHelp ;;

    ytrssCheckUrl)
        case $2 in
            add)
                if grep -q -w "^$3$" "$CONFIG"/ytsubs; then
                    ynotify err "Feed already exists"
                else
                    echo "$3" >> "$CONFIG"/ytsubs
                    ynotify a "$4"
                fi
                ;;
            import)
                if ! grep -q -w "^$3$" "$CONFIG"/ytsubs; then
                    echo "$3" >> "$CONFIG"/ytsubs
                fi
                ;;
        esac
        ;;

    handle_link)
        shift
        case $1 in
            browser)
                nohup bash -c "xdg-open \"${2}\" &" 2&>/dev/null
                ;;
            copy)
                if [ -n "$WAYLAND_DISPLAY" ]; then
                    printf "%s" "$2" | wl-copy
                else
                    printf "%s" "$2" | xclip -selection c
                fi

                ;;
        esac
        ;;

    fzfheader)
        if [[ -n "${*:2}" ]]; then
            grep -F ";;;${*:2}" "$CACHE"/ytrss |\
                sed "s|T.*$||g" |\
                awk -F ';;;' '{printf "[ Publish date: %s ]\n[alt-s => Browser, alt-c => Copy]" ,$1 }'
        else
            echo "[alt-s => Browser, alt-c => Copy]"
        fi
        ;;

    *)
        invalidArg "$1"
        printHelp
        ;;
esac
