#!/usr/bin/env bash

source ~/.local/lib/xlotus/xlfns

function printHelp () {
    cat <<-EOF
Name: xl-rgb - A tiny color converter written in bash (part of xlotus utilities)

Usage: xl-rgb <Option>

Options: One of the following options:

    -h , --help:
        Prints this help page.

    --rgb:
        Specify target as RGB { rgb(r,g,b) }

    --hex:
        Specify target as Hex color { #RRGGBB }

    --term:
        Specify target as 0-255 color index of terminal { NNN }

Reading from stdin:
    You can tell the script to read from stdin by adding a - at the end.
    Example:
        echo "#ea6962" | xl-rgb --rgb -
EOF
}

function invalidColorMsg () {
    cat <<-EOF
`ctxt r "$1 is an invalid color"`

Valid options are:
    1) rgb(r,g,b)
    2) #RRGGBB
    3) 3 digit terminal color
EOF
    exit 1
}

function hex_to_rgb () {
    hex=`echo $1 | sed 's/^#//g'`
    r=$(( 16#${hex:0:2} ))
    g=$(( 16#${hex:2:2} ))
    b=$(( 16#${hex:4:2} ))
    echo "rgb($r,$g,$b)"
}

function rgb_to_hex () {
    split_rgb "$1"
    printf "#%02x%02x%02x\n" $r $g $b
}

function rgb_to_term () {
    # Print nearest 0-255 color index
    # Credit: https://unix.stackexchange.com/a/269085
    split_rgb "$1"
    [[ $r -lt 75 ]] && r=0
    [[ $g -lt 75 ]] && g=0
    [[ $b -lt 75 ]] && b=0
    printf "%03d\n" "$(( ((r-35)/40)*6*6 + ((g-35)/40)*6 + ((b-35)/40) + 16 ))"
}

ALL_ARGS=($@)
if [ "${ALL_ARGS[$#-1]}" == "-" ]; then
    read color
else
    color=$2
fi

case $1 in
    --rgb)
        checkColor "$color"

        if [[ $checkColorVal == "rgb" ]]; then
            echo "$color"
        elif [[ $checkColorVal == "hex" ]]; then
            hex_to_rgb "$color"
        elif [[ $checkColorVal == "term" ]]; then
            echo "Term => RGB conversion is unavailable"
        elif [[ $checkColorVal == "invalid" ]]; then
            invalidColorMsg $color
        fi
        ;;

    --hex)
        checkColor "$color"

        if [[ $checkColorVal == "rgb" ]]; then
            rgb_to_hex "$color"
        elif [[ $checkColorVal == "hex" ]]; then
            printf "%s\n" "$color"
        elif [[ $checkColorVal == "term" ]]; then
            printf "%s\n" "Term => Hex conversion is unavailable"
        elif [[ $checkColorVal == "invalid" ]]; then
            invalidColorMsg $color
        fi
        ;;

    --term)
        checkColor "$color"

        if [[ $checkColorVal == "rgb" ]]; then
            rgb_to_term "$color"
        elif [[ $checkColorVal == "hex" ]]; then
            rgb=`hex_to_rgb "$color"`
            rgb_to_term "$rgb"
        elif [[ $checkColorVal == "term" ]]; then
            echo "$color"
        elif [[ $checkColorVal == "invalid" ]]; then
            invalidColorMsg $color
        fi
        ;;

    -h|--help) printHelp ;;
    *) echo -e "`ctxt r "Invalid option: '$1'"`" ;;
esac
