#!/usr/bin/env bash

# ----------------------------------------------
#   VARIABLES
# ----------------------------------------------
XLOTUS_CFG=~/.config/xlotus
XLOTUS_BIN=~/.local/bin
XLOTUS_LIB=~/.local/lib/xlotus
# ----------------------------------------------
# ----------------------------------------------



# ----------------------------------------------
#   FUNCTIONS
# ----------------------------------------------
# info to display when selecting scripts 
# with -s option
function scriptInfo () {
    cat <<-EOF
xl-yt;;;YouTube RSS feed aggregator;;;lib/xlpreview cfg/xlotus.cfg
xl-rgb;;;Color converter to RGB, Hex or 0-255 index terminal color
xl-cmd;;;Runner for user-defined commands;;;cfg/cmd
xl-headd;;;Run commands on headphone jack plug/unplug
xl-prayer;;;(Islam) Print next prayer and its time
xl-jump;;;Faster cd and file editing;;;cfg/include cfg/exclude
EOF
}

# Generate an array of script names from scriptInfo
XLOTUS_ALL=("$(scriptInfo | awk -F ';;;' '{print $1}')")

XLOTUS_LIB_ALL=("$(ls lib/)")
XLOTUS_CFG_ALL=("$(ls cfg/)")

# Color text for OK(green), ERR(red) and REM(blue)
function stxt () { echo -e "\033[0;32m[OK]\033[0m $1" ;}
function etxt () { echo -e "\033[0;31m[ERR] $1\033[0m" ;}
function rtxt () { echo -e "\033[0;34m[REM] $1\033[0m" ;}

# Help page
function printHelp () {
    cat <<-EOF
Usage: install <Option>

Option: Can be one of the following:

    -h , --help:
        Shows this help page.
    
    -s , --select:
        Select scripts to install.

    -a , --all:
        Install all scripts.

    -d , --dev:
        Make symbolic links instead of installing scripts.
        This is useful for development purposes.

Directories involved:

    XLOTUS_CFG = ~/.config/xlotus
        Configuration files for xlotus utilities

    XLOTUS_BIN = ~/.local/bin
        Directory where scripts are installed/linked to

    XLOTUS_LIB = ~/.local/lib/xlotus
        Files that gets sourced inside scripts

    XLOTUS_CACHE = ~/.cache/xlotus
        Cache for scripts
EOF
}

# If directory does not exist, make it
function chkmk () { 
    if [ ! -d "$1" ]; then 
        mkdir -p "$1"
        stxt "Created directory: $1" 
    fi
}

# Commands to run with the main function
function add () { cp -r "$@" ;}
function link () { ln -s "$(pwd)"/$@ ;}

# Main function to run for each script
function main () {
    # Command to run (copy or link)
    cmd="$1"
    shift
    case "$1" in
        lib|bin|cfg)

            # Set directory of installation
            case "$1" in
                lib) installDir=$XLOTUS_LIB ;;
                bin) installDir=$XLOTUS_BIN ;;
                cfg) installDir=$XLOTUS_CFG ;;
            esac

            # Check if specified file exists in this repo
            if [ ! -f "$1"/"$2" ] && [ ! -d "$1"/"$2" ]; then
                etxt "'$1/$2' does not exist in this repo"
                # Set has_err to 1 to indicate there's an error
                # to prevent the success message
                has_err=1
            else
                # if file does not exist in installation
                # directory
                if [ ! -f "$installDir"/"$2" ]; then
                    $cmd "$1"/"$2" "$installDir"/"$2"
                    if [ "$cmd" == "add" ]; then
                        stxt "Installed '$2' ($1)"
                    elif [ "$cmd" == "link" ]; then
                        stxt "Linked '$2' ($1)"
                    fi
                else
                    # if file does not exist in installDir
                    #
                    # if command is add
                    if [ "$cmd" == "add" ]; then
                        # check filetype
                        fileType=$(file -bi "$installDir"/"$2" | awk -F ';' '{print $1}')

                        # if filetype is a symlink
                        if [ "$fileType" == "inode/symlink" ]; then
                            rm "$installDir/$2"
                            rtxt "'$2' ($1) removed old symlink"
                            $cmd "$1"/"$2" "$installDir"/"$2"
                            stxt "Installed '$2' ($1)"
                        else
                            stxt "'$2' ($1) already exists ... no need to reinstall"
                        fi
                    # if command is link
                    elif [ "$cmd" == "link" ]; then
                        # check filetype
                        fileType=$(file -bi "$installDir"/"$2" | awk -F ';' '{print $1}')

                        # if filetype is a shellscript
                        if [ "$fileType" != "inode/symlink" ]; then
                            rm "$installDir/$2"
                            rtxt "'$2' ($1) removed old $1"
                            $cmd "$1"/"$2" "$installDir"/"$2"
                            stxt "Linked '$2' ($1)"
                        else
                            stxt "'$2' ($1) already linked"
                        fi
                    fi
                fi
            fi
            ;;
    esac
}

# Message to print when installation was a success
function success () {
    if [ "$has_err" != "1" ]; then
        echo -e "\n\033[0;32mInstallation was a success!\033[0m"
        echo -e "\nDon't forget to add \033[0;32m\$HOME/.local/bin\033[0m to your PATH variable"
    fi
}
# ----------------------------------------------
# ----------------------------------------------



# ----------------------------------------------
#   PRE-INSTALLATION SETUP
# ----------------------------------------------
# Setup directories
chkmk $XLOTUS_CFG
chkmk $XLOTUS_BIN
chkmk $XLOTUS_LIB

# If no arguments provided, use --all
if [ -z "$1" ]; then
    stxt "No arguments provided, so I'll be using '--all'"
    opt="--all"
else
    opt="$1"
fi
# ----------------------------------------------
# ----------------------------------------------



# ----------------------------------------------
#   PROCESS OPTIONS
# ----------------------------------------------
case $opt in
    -a|--all)
        for cfg in "${XLOTUS_CFG_ALL[@]}"; do
            main add cfg "$cfg"
        done
        for lib in "${XLOTUS_LIB_ALL[@]}"; do
            main add lib "$lib"
        done
        for script in "${XLOTUS_ALL[@]}"; do
            main add bin "$script"
        done
        success
        ;;

    -s|--select)
        choices=("$(scriptInfo |\
            awk -F ';;;' '{ printf "%2s %-20s %s\n", " ", $1, $2}' |\
            fzf --multi \
                --header="Install > " \
                --bind 'tab:toggle+up,shift-tab:toggle+down,change:first' \
                --tiebreak=begin |\
                awk '{ print $1 }')")

        if [ -n "${choices[0]}" ]; then
            main add lib xlfns
            for choice in "${choices[@]}"; do
                deps=("$(scriptInfo | grep "^$choice;;;" | awk -F ';;;' '{print $3}')")
                for dep in "${deps[@]}"; do
                    target=$(echo "$dep" | awk -F '/' '{print $1}')
                    script=$(echo "$dep" | awk -F '/' '{print $2}')
                    main add "$target" "$script"
                done
                main add bin "$choice"
            done
            success
        fi
        ;;

    -d|--dev)
        for cfg in "${XLOTUS_CFG_ALL[@]}"; do
            main add cfg "$cfg"
        done

        for lib in "${XLOTUS_LIB_ALL[@]}"; do
            main link lib "$lib"
        done

        for script in "${XLOTUS_ALL[@]}"; do
            main link bin "$script"
        done
        success
        ;;

    -h|--help) printHelp ;;
    *) etxt "Invalid argument: $1" ;;
esac
