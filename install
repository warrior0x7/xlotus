#!/usr/bin/env bash

# ----------------------------------------------
#   VARIABLES
# ----------------------------------------------
XLOTUS_CFG=~/.config/xlotus
XLOTUS_BIN=~/.local/bin
XLOTUS_LIB=~/.local/lib/xlotus
XLOTUS_HELP=~/.local/share/xlotus/help
# ----------------------------------------------
# ----------------------------------------------



# ----------------------------------------------
#   FUNCTIONS
# ----------------------------------------------
# info to display when selecting scripts 
# with -s option
function scriptInfo () {
    cat <<-EOF
xl-yt;;;YouTube RSS feed aggregator;;;lib/xlpreview cfg/xlotus.cfg
xl-rgb;;;Color converter to RGB, Hex or 0-255 index terminal color
xl-cmd;;;Runner for user-defined commands;;;cfg/cmd
xl-daemon;;;Run daemons in the background;;;cfg/daemon/*
xl-prayer;;;(Islam) Print next prayer and its time
xl-jump;;;Faster cd and file editing;;;cfg/jump
xl-run;;;Execute programs from PATH;;;
EOF
}

# Generate an array of script names from scriptInfo
XLOTUS_ALL=("$(scriptInfo | awk -F ';;;' '{print $1}')")

XLOTUS_LIB_ALL=("$(ls lib/)")
XLOTUS_CFG_ALL=("$(ls cfg/)")

# Color text for OK(green), ERR(red) and REM(blue)
function stxt () { echo -e "\033[0;32m[OK]\033[0m $1" ;}
function etxt () { echo -e "\033[0;31m[ERR] $1\033[0m" ;}
function rtxt () { echo -e "\033[0;34m[REM] $1\033[0m" ;}

# If directory does not exist, make it
function chkmk () { 
    if [ ! -d "$1" ]; then 
        mkdir -p "$1"
        stxt "Created directory: $1" 
    fi
}

# Commands to run with the main function
function add () { cp -r "$@" ;}
function link () { ln -s "$(pwd)"/$@ ;}

# Main function to run for each file
function main () {
    # Command to run (copy or link)
    cmd="$1"
    shift
    case "$1" in
        lib|bin|cfg)

            # Set directory of installation
            case "$1" in
                lib) installDir=$XLOTUS_LIB ;;
                bin) 
                    installDir=$XLOTUS_BIN 
                    # add help page
                    if [ ! -f "$XLOTUS_HELP"/"$2" ]; then 
                        $cmd help/"$2" "$XLOTUS_HELP"/"$2"
                    else
                        rm  $XLOTUS_HELP/"$2"
                        $cmd help/"$2" "$XLOTUS_HELP"/"$2"
                    fi
                    ;;
                cfg) installDir=$XLOTUS_CFG ;;
            esac

            # Check if specified file exists in this repo
            if [ ! -f "$1"/"$2" ] && [ ! -d "$1"/"$2" ]; then
                etxt "'$1/$2' does not exist in this repo"
                # Set has_err to 1 to indicate there's an error
                # to prevent the success message
                has_err=1
            else
                # if file does not exist in installDir
                if [ ! -f "$installDir"/"$2" ] && [ ! -d "$installDir"/"$2" ]; then
                    $cmd "$1"/"$2" "$installDir"/"$2"
                    if [ "$cmd" == "add" ]; then
                        stxt "Installed '$2' ($1)"
                    elif [ "$cmd" == "link" ]; then
                        stxt "Linked '$2' ($1)"
                    fi
                elif [ -f "$installDir"/"$2" ]; then
                    # if file exists in installDir
                    #
                    # check filetype
                    fileType=$(file -bi "$installDir"/"$2" | awk -F ';' '{print $1}')

                    # if command is add
                    if [ "$cmd" == "add" ]; then
                        # if filetype is a symlink
                        if [ "$fileType" == "inode/symlink" ]; then
                            rm "$installDir/$2"
                            rm "$XLOTUS_HELP"/"$2"
                            rtxt "($1) '$2' removed old symlink"
                            $cmd "$1"/"$2" "$installDir"/"$2"
                            stxt "Installed '$2' ($1)"
                        else
                            stxt "($1) '$2' already exists"
                        fi
                    # if command is link
                    elif [ "$cmd" == "link" ]; then
                        # if filetype is not a link
                        if [ "$fileType" != "inode/symlink" ]; then
                            rm "$installDir/$2"
                            rtxt "($1) '$2' removed old $1"
                            $cmd "$1"/"$2" "$installDir"/"$2"
                            stxt "Linked '$2' ($1)"
                        else
                            stxt "($1) '$2' already linked"
                        fi
                    fi
                fi
            fi
            ;;
    esac
}

# Message to print when installation was a success
function success () {
    if [ "$has_err" != "1" ]; then
        echo -e "\n\033[0;32mInstallation was a success!\033[0m"
        echo -e "\nDon't forget to add \033[0;32m\$HOME/.local/bin\033[0m to your PATH variable"
    fi
}
# ----------------------------------------------
# ----------------------------------------------



# ----------------------------------------------
#   PRE-INSTALLATION SETUP
# ----------------------------------------------
# Setup directories
chkmk $XLOTUS_CFG
chkmk $XLOTUS_BIN
chkmk $XLOTUS_LIB
chkmk $XLOTUS_HELP

# If no arguments provided, use --all
if [ -z "$1" ]; then
    stxt "No arguments provided, so I'll be using '--all'"
    opt="--all"
else
    opt="$1"
fi
# ----------------------------------------------
# ----------------------------------------------



# ----------------------------------------------
#   PROCESS OPTIONS
# ----------------------------------------------
case $opt in
    -a|--all)
        for cfg in ${XLOTUS_CFG_ALL[@]}; do
            main add cfg "$cfg"
        done
        for lib in ${XLOTUS_LIB_ALL[@]}; do
            main add lib "$lib"
        done
        for script in ${XLOTUS_ALL[@]}; do
            main add bin "$script"
        done
        if [ ! -f "$XLOTUS_HELP"/footer ]; then 
            cp help/footer "$XLOTUS_HELP"/footer
        else
            fileType=$(file -bi "$XLOTUS_HELP"/footer | awk -F ';' '{print $1}')
            if [ "$fileType" == "inode/symlink" ]; then
                rm  $XLOTUS_HELP/footer
                cp help/footer "$XLOTUS_HELP"/footer
            fi
        fi
        success
        ;;

    -s|--select)
        choices=("$(scriptInfo |\
            awk -F ';;;' '{ printf "%2s %-20s %s\n", " ", $1, $2}' |\
            fzf --multi \
                --header="Install > " \
                --bind 'tab:toggle+up,shift-tab:toggle+down,change:first' \
                --tiebreak=begin |\
                awk '{ print $1 }')")

        if [ -n "${choices[0]}" ]; then
            main add lib xlfns
            for choice in ${choices[@]}; do
                deps=("$(scriptInfo | grep "^$choice;;;" | awk -F ';;;' '{print $3}')")
                for dep in ${deps[@]}; do
                    target=$(echo "$dep" | awk -F '/' '{print $1}')
                    file=$(echo "$dep" | cut -d/ -f2-)
                    dir=$(echo "$file" | awk -F '/' 'BEGIN{OFS="/"};NF{NF-=1};1')
                    [ -n "$dir" ] && mkdir -p "$XLOTUS_CFG"/"$dir"
                    main add "$target" "$file"
                done
                main add bin "$choice"
            done
            if [ ! -f "$XLOTUS_HELP"/footer ]; then 
                cp help/footer "$XLOTUS_HELP"/footer
            else
                fileType=$(file -bi "$XLOTUS_HELP"/footer | awk -F ';' '{print $1}')
                if [ "$fileType" == "inode/symlink" ]; then
                    rm  $XLOTUS_HELP/footer
                    cp help/footer "$XLOTUS_HELP"/footer
                fi
            fi
            success
        fi
        ;;

    -d|--dev)
        for cfg in ${XLOTUS_CFG_ALL[@]}; do
            main add cfg "$cfg"
        done

        for lib in ${XLOTUS_LIB_ALL[@]}; do
            main link lib "$lib"
        done

        for script in ${XLOTUS_ALL[@]}; do
            main link bin "$script"
        done
        
        if [ ! -f "$XLOTUS_HELP"/footer ]; then 
            link help/footer "$XLOTUS_HELP"/footer
        else
            fileType=$(file -bi "$XLOTUS_HELP"/footer | awk -F ';' '{print $1}')
            if [ "$fileType" != "inode/symlink" ]; then
                rm  $XLOTUS_HELP/footer
                link help/footer "$XLOTUS_HELP"/footer
            fi
        fi

        success
        ;;

    -h|--help)
        if [ -z "$2" ]; then
            cat help/install
        else
            if [ -f help/"$2" ]; then
                cat help/"$2"
            else
                etxt "Help page not found"
            fi
        fi
        ;;

    *) etxt "Invalid argument: $1" ;;
esac
